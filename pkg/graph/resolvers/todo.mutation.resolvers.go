package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"

	"github.com/google/uuid"
	graph "github.com/praadit/dikurium-test/pkg/graph/generated"
	"github.com/praadit/dikurium-test/pkg/models"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input models.CreateTodoInput) (*models.Todo, error) {
	return r.Controller.CreateTodo(ctx, &input)
}

// MarkComplete is the resolver for the markComplete field.
func (r *mutationResolver) MarkComplete(ctx context.Context, todoID string) (*models.Todo, error) {
	uuidTodo, err := uuid.Parse(todoID)
	if err != nil {
		return nil, err
	}
	return r.Controller.MarkCompleted(ctx, uuidTodo)
	// return nil, nil
}

// DeleteTodo is the resolver for the deleteTodo field.
func (r *mutationResolver) DeleteTodo(ctx context.Context, todoID string) (bool, error) {
	uuidTodo, err := uuid.Parse(todoID)
	if err != nil {
		return false, err
	}

	return r.Controller.DeleteTodo(ctx, uuidTodo)
	// return false, nil
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
